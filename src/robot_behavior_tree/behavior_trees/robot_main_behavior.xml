<?xml version="1.0" encoding="UTF-8"?>
<root main_tree_to_execute="RobotMainBehavior">
    
    <!-- 主行为树：机器人综合任务执行 -->
    <BehaviorTree ID="RobotMainBehavior">
        <ReactiveSequence>
            <!-- 1. 系统初始化 -->
            <SubTree ID="SystemInitialization"/>
            
            <!-- 2. 主任务循环 -->
            <Fallback>
                <!-- 2.1 目标追踪任务（优先级最高） -->
                <SubTree ID="TargetTrackingMission"/>
                
                <!-- 2.2 巡逻任务 -->
                <SubTree ID="PatrolMission"/>
                
                <!-- 2.3 空闲状态 -->
                <SubTree ID="IdleState"/>
            </Fallback>
        </ReactiveSequence>
    </BehaviorTree>

    <!-- 系统初始化子树 -->
    <BehaviorTree ID="SystemInitialization">
        <Sequence>
            <Action ID="StartDetection" target_class="ferrari" confidence_threshold="0.85"/>
            <Action ID="GimbalCenter" timeout="3.0"/>
            <Action ID="GetCurrentPosition" current_position="{robot_position}"/>
            <SetBlackboard output_key="system_ready" value="true"/>
        </Sequence>
    </BehaviorTree>

    <!-- 目标追踪任务子树 -->
    <BehaviorTree ID="TargetTrackingMission">
        <ReactiveSequence>
            <!-- 检查是否检测到目标 -->
            <Condition ID="IsTargetDetected" 
                      target_class="ferrari" 
                      min_confidence="0.8" 
                      timeout="1.0"
                      target_position="{detected_target}"/>
            
            <!-- 目标追踪流程 -->
            <Fallback>
                <!-- 情况1：目标已居中，执行追踪 -->
                <Sequence>
                    <Condition ID="IsTargetCentered" 
                              target_pixel_position="{detected_target}"
                              center_tolerance="30.0"/>
                    <SubTree ID="TrackTarget"/>
                </Sequence>
                
                <!-- 情况2：目标未居中，调整云台 -->
                <Sequence>
                    <Action ID="EnableGimbalTracking" enable="true"/>
                    <Delay delay_msec="500"/>
                    <!-- 等待云台调整完成 -->
                    <RetryUntilSuccessful num_attempts="10">
                        <Condition ID="IsTargetCentered" 
                                  target_pixel_position="{detected_target}"
                                  center_tolerance="50.0"/>
                    </RetryUntilSuccessful>
                </Sequence>
            </Fallback>
        </ReactiveSequence>
    </BehaviorTree>

    <!-- 目标追踪子树 -->
    <BehaviorTree ID="TrackTarget">
        <ReactiveSequence>
            <!-- 保持云台追踪 -->
            <Action ID="EnableGimbalTracking" enable="true"/>
            
            <!-- 跟随策略 -->
            <Fallback>
                <!-- 策略1：目标在视野中心，机器人前进 -->
                <Sequence>
                    <Condition ID="IsTargetCentered" 
                              target_pixel_position="{detected_target}"
                              center_tolerance="20.0"/>
                    <SubTree ID="FollowTarget"/>
                </Sequence>
                
                <!-- 策略2：目标偏离中心，等待云台调整 -->
                <Sequence>
                    <Delay delay_msec="1000"/>
                    <Condition ID="IsTargetDetected" 
                              target_class="ferrari" 
                              min_confidence="0.8"
                              timeout="2.0"/>
                </Sequence>
            </Fallback>
        </ReactiveSequence>
    </BehaviorTree>

    <!-- 跟随目标子树 -->
    <BehaviorTree ID="FollowTarget">
        <Sequence>
            <!-- 获取当前位置 -->
            <Action ID="GetCurrentPosition" current_position="{current_pos}"/>
            
            <!-- 计算前进距离（可以根据目标大小调整） -->
            <SetBlackboard output_key="forward_distance" value="0.5"/>
            
            <!-- 前进一小段距离 -->
            <Action ID="MoveForward" 
                   distance="{forward_distance}"
                   max_speed="0.3"/>
            
            <!-- 短暂停顿，让系统稳定 -->
            <Delay delay_msec="500"/>
        </Sequence>
    </BehaviorTree>

    <!-- 巡逻任务子树 -->
    <BehaviorTree ID="PatrolMission">
        <ReactiveSequence>
            <!-- 检查是否未检测到目标（空闲状态才执行巡逻） -->
            <Inverter>
                <Condition ID="IsTargetDetected" 
                          target_class="ferrari" 
                          min_confidence="0.8" 
                          timeout="3.0"/>
            </Inverter>
            
            <!-- 巡逻路径执行 -->
            <SubTree ID="ExecutePatrolPath"/>
        </ReactiveSequence>
    </BehaviorTree>

    <!-- 执行巡逻路径子树 -->
    <BehaviorTree ID="ExecutePatrolPath">
        <ReactiveSequence>
            <!-- 启用云台扫描模式 -->
            <Action ID="GimbalScanMode" 
                   scan_range="1.57" 
                   scan_speed="0.3"
                   scan_duration="8.0"/>
            
            <!-- 巡逻路径点 -->
            <Fallback>
                <!-- 巡逻点1 -->
                <Sequence>
                    <Condition ID="IsAtPosition" 
                              target_position="1.0;0.0;0.0"
                              current_position="{robot_position}"
                              tolerance="0.2"/>
                    <Action ID="NavigateToPosition" 
                           target_position="0.0;1.0;0.0"
                           tolerance="0.15"
                           max_speed="0.4"/>
                </Sequence>
                
                <!-- 巡逻点2 -->
                <Sequence>
                    <Condition ID="IsAtPosition" 
                              target_position="0.0;1.0;0.0"
                              current_position="{robot_position}"
                              tolerance="0.2"/>
                    <Action ID="NavigateToPosition" 
                           target_position="-1.0;0.0;0.0"
                           tolerance="0.15"
                           max_speed="0.4"/>
                </Sequence>
                
                <!-- 巡逻点3 -->
                <Sequence>
                    <Condition ID="IsAtPosition" 
                              target_position="-1.0;0.0;0.0"
                              current_position="{robot_position}"
                              tolerance="0.2"/>
                    <Action ID="NavigateToPosition" 
                           target_position="0.0;-1.0;0.0"
                           tolerance="0.15"
                           max_speed="0.4"/>
                </Sequence>
                
                <!-- 巡逻点4（回到起点） -->
                <Sequence>
                    <Condition ID="IsAtPosition" 
                              target_position="0.0;-1.0;0.0"
                              current_position="{robot_position}"
                              tolerance="0.2"/>
                    <Action ID="NavigateToPosition" 
                           target_position="0.0;0.0;0.0"
                           tolerance="0.15"
                           max_speed="0.4"/>
                </Sequence>
                
                <!-- 默认：前往第一个巡逻点 -->
                <Action ID="NavigateToPosition" 
                       target_position="1.0;0.0;0.0"
                       tolerance="0.15"
                       max_speed="0.4"/>
            </Fallback>
        </ReactiveSequence>
    </BehaviorTree>

    <!-- 空闲状态子树 -->
    <BehaviorTree ID="IdleState">
        <Sequence>
            <!-- 停止机器人 -->
            <Action ID="StopRobot"/>
            
            <!-- 云台扫描模式 -->
            <Action ID="GimbalScanMode" 
                   scan_range="3.14" 
                   scan_speed="0.2"
                   scan_duration="15.0"/>
            
            <!-- 等待一段时间 -->
            <Delay delay_msec="2000"/>
        </Sequence>
    </BehaviorTree>

    <!-- 紧急停止子树 -->
    <BehaviorTree ID="EmergencyStop">
        <Sequence>
            <Action ID="StopRobot"/>
            <Action ID="EnableGimbalTracking" enable="false"/>
            <Action ID="GimbalCenter" timeout="2.0"/>
            <Action ID="StopDetection"/>
        </Sequence>
    </BehaviorTree>

</root>
